@page "/todos"
@inject IAsyncRepository<Todo> TodoRepository
@inject IAsyncRepository<TodoList> TodoListRepository

@foreach (var list in _lists)
{
    <TodoListCard List="@list" OnDelete="@(() => DeleteList(list))"></TodoListCard>
}
<MudButton OnClick="AddList">Add List</MudButton>

<MudDivider/>

@foreach (var todo in _uncategorized)
{
    <TodoItem></TodoItem>
}
<MudButton>Add Todo</MudButton>


@code {

    private IEnumerable<TodoList> _lists = Enumerable.Empty<TodoList>();
    private IEnumerable<Todo> _uncategorized = Enumerable.Empty<Todo>();

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        _uncategorized = await TodoRepository.All();
        _lists = await TodoListRepository.All();
    }

    private async Task AddList()
    {
        await TodoListRepository.Create();
        _lists = await TodoListRepository.All();
    }

    private async Task DeleteList(TodoList list)
    {
        Console.WriteLine("Deleting list:" + list.Id);
        await TodoListRepository.Delete(list);
        _lists = await TodoListRepository.All();
    }
    
}